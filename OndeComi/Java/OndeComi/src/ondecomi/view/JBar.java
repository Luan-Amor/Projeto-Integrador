/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ondecomi.view;

import dao.BarDao;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import util.DBUtil;

/**
 *
 * @author Luan Amor
 */
public class JBar extends javax.swing.JFrame {

    private String nome;
    private int idAvaliador;
    private ResultSet rs = null;
    private Connection con = DBUtil.getConnection();
    private PreparedStatement pstm = null;
    private DefaultListModel model = new DefaultListModel();
    private BarDao dao = new BarDao();

    public JBar() {
        initComponents();

        fillBaresGeral();
        setIcon();

    }

    public void limpaRank() {
        model.removeAllElements();
    }

    public void recebeId(String id, String nome) {
        int idInt = Integer.parseInt(id);
        this.nome = nome;
        this.idAvaliador = idInt;
    }

    public void fillBaresGeral() {
        try {
            pstm = con.prepareStatement("select id, nome, mediaGeral(preco, ambiente, atendimento, drinks, gelada) as media\n"
                    + "from bar inner join avalia_bar\n"
                    + "on id_bar = id\n"
                    + "where id_avaliador = ? order by media desc;");
            //pstm = con.prepareStatement(sql);
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();

            while (rs.next()) {
                //pega os parametros do select 
                String id = Integer.toString(rs.getInt("id"));
                String name = rs.getString("nome");
                String nota = Float.toString(rs.getFloat("media"));
                //passa os parametros para a lista
                model.addElement(id + " | " + nota + " | " + name);
            }
            jList1.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pstm.close();
            } catch (Exception e) {
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnVoltarTela = new javax.swing.JButton();
        btnMaisBar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        lblRank = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnRankAmbiente = new javax.swing.JButton();
        btnRankAtendimento = new javax.swing.JButton();
        btnRankGelada = new javax.swing.JButton();
        btnRankGeral = new javax.swing.JButton();
        btnRankPreco = new javax.swing.JButton();
        btnRankDrink = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bares");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Seus Bares");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        btnVoltarTela.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        btnVoltarTela.setText("Voltar");
        btnVoltarTela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltarTela.setFocusPainted(false);
        btnVoltarTela.setFocusable(false);
        btnVoltarTela.setOpaque(false);
        btnVoltarTela.setRequestFocusEnabled(false);
        btnVoltarTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarTelaActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltarTela, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, 125, 45));

        btnMaisBar.setFont(new java.awt.Font("Bookman Old Style", 1, 20)); // NOI18N
        btnMaisBar.setText("Adicionar");
        btnMaisBar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMaisBar.setBorderPainted(false);
        btnMaisBar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMaisBar.setFocusPainted(false);
        btnMaisBar.setFocusable(false);
        btnMaisBar.setOpaque(false);
        btnMaisBar.setRequestFocusEnabled(false);
        btnMaisBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaisBarActionPerformed(evt);
            }
        });
        getContentPane().add(btnMaisBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 140, 45));

        jList1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 268, 270));

        lblRank.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblRank.setText("RANK's");
        getContentPane().add(lblRank, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cod.");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nota");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, -1, -1));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nome");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        btnRankAmbiente.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        btnRankAmbiente.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankAmbiente.setText("Ambiente");
        btnRankAmbiente.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankAmbiente.setBorderPainted(false);
        btnRankAmbiente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankAmbiente.setFocusPainted(false);
        btnRankAmbiente.setFocusable(false);
        btnRankAmbiente.setOpaque(false);
        btnRankAmbiente.setRequestFocusEnabled(false);
        btnRankAmbiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankAmbienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankAmbiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 150, 41));

        btnRankAtendimento.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        btnRankAtendimento.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankAtendimento.setText("Atendimento");
        btnRankAtendimento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankAtendimento.setBorderPainted(false);
        btnRankAtendimento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankAtendimento.setFocusPainted(false);
        btnRankAtendimento.setFocusable(false);
        btnRankAtendimento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRankAtendimento.setOpaque(false);
        btnRankAtendimento.setRequestFocusEnabled(false);
        btnRankAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankAtendimentoActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankAtendimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, 160, 41));

        btnRankGelada.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        btnRankGelada.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankGelada.setText("Gelada");
        btnRankGelada.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankGelada.setBorderPainted(false);
        btnRankGelada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankGelada.setFocusPainted(false);
        btnRankGelada.setFocusable(false);
        btnRankGelada.setOpaque(false);
        btnRankGelada.setRequestFocusEnabled(false);
        btnRankGelada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankGeladaActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankGelada, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, 130, 41));

        btnRankGeral.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        btnRankGeral.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankGeral.setText("Geral");
        btnRankGeral.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankGeral.setBorderPainted(false);
        btnRankGeral.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankGeral.setFocusPainted(false);
        btnRankGeral.setFocusable(false);
        btnRankGeral.setOpaque(false);
        btnRankGeral.setRequestFocusEnabled(false);
        btnRankGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankGeralActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankGeral, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 110, 41));

        btnRankPreco.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        btnRankPreco.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankPreco.setText("Preço");
        btnRankPreco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankPreco.setBorderPainted(false);
        btnRankPreco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankPreco.setFocusPainted(false);
        btnRankPreco.setFocusable(false);
        btnRankPreco.setOpaque(false);
        btnRankPreco.setRequestFocusEnabled(false);
        btnRankPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankPrecoActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 120, 41));

        btnRankDrink.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        btnRankDrink.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankDrink.setText("Drinks");
        btnRankDrink.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankDrink.setBorderPainted(false);
        btnRankDrink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankDrink.setFocusPainted(false);
        btnRankDrink.setFocusable(false);
        btnRankDrink.setOpaque(false);
        btnRankDrink.setRequestFocusEnabled(false);
        btnRankDrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankDrinkActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankDrink, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 140, 41));

        btnDelete.setFont(new java.awt.Font("Bookman Old Style", 1, 20)); // NOI18N
        btnDelete.setText("Deletar");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.setBorderPainted(false);
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setFocusPainted(false);
        btnDelete.setFocusable(false);
        btnDelete.setOpaque(false);
        btnDelete.setRequestFocusEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, 128, 45));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ondecomi/view/Imagens/bar.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-260, 0, 730, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
//BOTÕES FUNCIONAIS
    private void btnMaisBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaisBarActionPerformed
        NovoBar novoBar = new NovoBar();
        novoBar.setVisible(true);
        novoBar.recebeId(idAvaliador, nome);
        dispose();
    }//GEN-LAST:event_btnMaisBarActionPerformed

    private void btnVoltarTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarTelaActionPerformed
        TelaInicial inicial = new TelaInicial();
        inicial.setVisible(true);
        inicial.recebeID(Integer.toString(idAvaliador), nome);
        dispose();
    }//GEN-LAST:event_btnVoltarTelaActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String a[] = new String[2];
        a = jList1.getSelectedValue().split(" ");
        System.out.println(a[0] + ": " + a[1]);
        try {
            if (jList1.isSelectedIndex(jList1.getSelectedIndex())) {
                dao.deleteBar(Integer.parseInt(a[0]));
                model.removeElementAt(jList1.getSelectedIndex());
                JOptionPane.showMessageDialog(null, "Bar excluído");

            } else {
                JOptionPane.showMessageDialog(null, "Selecione um bar antes de deletar");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

//RANKS
    private void btnRankGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankGeralActionPerformed
        limpaRank();
        fillBaresGeral();
    }//GEN-LAST:event_btnRankGeralActionPerformed

    private void btnRankPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankPrecoActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, preco \n"
                    + "from bar inner join avalia_bar\n"
                    + "on id = id_bar\n"
                    + "where id_avaliador = ? order by preco desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();

            while (rs.next()) {
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String preco = Float.toString(rs.getFloat("preco"));
                //Adicionando na lista
                model.addElement(id + " | " + preco + " | " + nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                pstm.close();
                rs.close();
            } catch (Exception e1) {
                JOptionPane.showMessageDialog(null, e1);
            }

        }
    }//GEN-LAST:event_btnRankPrecoActionPerformed

    private void btnRankAmbienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankAmbienteActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, ambiente \n"
                    + "from bar inner join avalia_bar\n"
                    + "on id = id_bar\n"
                    + "where id_avaliador = ? order by ambiente desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();

            while (rs.next()) {
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String ambiente = Float.toString(rs.getFloat("ambiente"));
                //Adicionando na lista
                model.addElement(id + " | " + ambiente + " | " + nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                pstm.close();
                rs.close();
            } catch (Exception e1) {
                JOptionPane.showMessageDialog(null, e1);
            }
        }
    }//GEN-LAST:event_btnRankAmbienteActionPerformed

    private void btnRankAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankAtendimentoActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, atendimento \n"
                    + "from bar inner join avalia_bar\n"
                    + "on id = id_bar\n"
                    + "where id_avaliador = ? order by atendimento desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();

            while (rs.next()) {
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String atendimento = Float.toString(rs.getFloat("atendimento"));
                //Adicionando na lista
                model.addElement(id + " | " + atendimento + " | " + nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                pstm.close();
                rs.close();
            } catch (Exception e1) {
                JOptionPane.showMessageDialog(null, e1);
            }
        }
    }//GEN-LAST:event_btnRankAtendimentoActionPerformed

    private void btnRankGeladaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankGeladaActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, gelada \n"
                    + "from bar inner join avalia_bar\n"
                    + "on id = id_bar\n"
                    + "where id_avaliador = ? order by gelada desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();

            while (rs.next()) {
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String gelada = Float.toString(rs.getFloat("gelada"));
                //Adicionando na lista
                model.addElement(id + " | " + gelada + " | " + nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                pstm.close();
                rs.close();
            } catch (Exception e1) {
                JOptionPane.showMessageDialog(null, e1);
            }
        }
    }//GEN-LAST:event_btnRankGeladaActionPerformed

    private void btnRankDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankDrinkActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, drinks \n"
                    + "from bar inner join avalia_bar\n"
                    + "on id = id_bar\n"
                    + "where id_avaliador = ? order by drinks desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();

            while (rs.next()) {
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String drinks = Float.toString(rs.getFloat("drinks"));
                //Adicionando na lista
                model.addElement(id + " | " + drinks + " | " + nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                pstm.close();
                rs.close();
            } catch (Exception e1) {
                JOptionPane.showMessageDialog(null, e1);
            }
        }
    }//GEN-LAST:event_btnRankDrinkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JBar().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnMaisBar;
    private javax.swing.JButton btnRankAmbiente;
    private javax.swing.JButton btnRankAtendimento;
    private javax.swing.JButton btnRankDrink;
    private javax.swing.JButton btnRankGelada;
    private javax.swing.JButton btnRankGeral;
    private javax.swing.JButton btnRankPreco;
    private javax.swing.JButton btnVoltarTela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRank;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("food.png")));

    }
}
