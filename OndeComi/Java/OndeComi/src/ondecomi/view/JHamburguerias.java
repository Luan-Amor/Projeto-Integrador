/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ondecomi.view;

import dao.HamburgerDao;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import util.DBUtil;

/**
 *
 * @author Luan Amor
 */
public class JHamburguerias extends javax.swing.JFrame {
    private String nome;
    private int idAvaliador;
    private ResultSet rs = null;
    private Connection con = DBUtil.getConnection();
    private PreparedStatement pstm = null;
    private DefaultListModel model = new DefaultListModel();
    private HamburgerDao dao = new HamburgerDao();
    /**
     * Creates new form JHamburguerias
     */
    public JHamburguerias() {
        initComponents();
        fillHamburgerGeral();
        setIcon();
    }
     public void limpaRank(){
        model.removeAllElements();
    }
    
    public void recebeId(String id, String nome){
        int idInt = Integer.parseInt(id);
        this.nome = nome;   
        this.idAvaliador = idInt;
    }
    
    public void fillHamburgerGeral(){
        try {
            pstm = con.prepareStatement("select id, nome, mediaGeral(preco, ambiente, atendimento, hamburger, acompanhamento) as media\n" +
                                        "from hamburgueria inner join avalia_hamburger\n" +
                                        "on id_hamburgueria = id\n" +
                                        "where id_avaliador = ? order by media desc;");
            //pstm = con.prepareStatement(sql);
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();
            
            while(rs.next()){
                //pega os parametros do select 
                String id = Integer.toString(rs.getInt("id"));
                String name = rs.getString("nome");
                String nota = Float.toString(rs.getFloat("media"));
                //passa os parametros para a lista
                model.addElement(id+" | "+nota+" | "+name);
            }
            jList1.setModel(model);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try {
                rs.close();
                pstm.close();
            } catch (Exception e) {
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltarTela = new javax.swing.JButton();
        btnMaisBar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        btnRankAcompanhamento = new javax.swing.JButton();
        btnRankPreco = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblRank = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnRankAmbiente = new javax.swing.JButton();
        btnRankAtendimento = new javax.swing.JButton();
        btnRankHamburger = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnRankGeral = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hamburguerias");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVoltarTela.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        btnVoltarTela.setText("Voltar");
        btnVoltarTela.setAlignmentX(0.5F);
        btnVoltarTela.setAutoscrolls(true);
        btnVoltarTela.setBorder(null);
        btnVoltarTela.setBorderPainted(false);
        btnVoltarTela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltarTela.setFocusPainted(false);
        btnVoltarTela.setFocusable(false);
        btnVoltarTela.setOpaque(false);
        btnVoltarTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarTelaActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltarTela, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 460, 125, 45));

        btnMaisBar.setFont(new java.awt.Font("Bookman Old Style", 1, 20)); // NOI18N
        btnMaisBar.setText("Adicionar");
        btnMaisBar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMaisBar.setBorderPainted(false);
        btnMaisBar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMaisBar.setFocusPainted(false);
        btnMaisBar.setFocusable(false);
        btnMaisBar.setOpaque(false);
        btnMaisBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaisBarActionPerformed(evt);
            }
        });
        getContentPane().add(btnMaisBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 140, 45));

        jList1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setMaximumSize(new java.awt.Dimension(71, 170));
        jList1.setMinimumSize(new java.awt.Dimension(71, 170));
        jList1.setPreferredSize(new java.awt.Dimension(71, 170));
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 268, 260));

        btnRankAcompanhamento.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankAcompanhamento.setText("Acompanhamento");
        btnRankAcompanhamento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankAcompanhamento.setBorderPainted(false);
        btnRankAcompanhamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankAcompanhamento.setFocusPainted(false);
        btnRankAcompanhamento.setFocusable(false);
        btnRankAcompanhamento.setOpaque(false);
        btnRankAcompanhamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankAcompanhamentoActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankAcompanhamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 190, 41));

        btnRankPreco.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankPreco.setText("Pre√ßo");
        btnRankPreco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankPreco.setBorderPainted(false);
        btnRankPreco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankPreco.setFocusPainted(false);
        btnRankPreco.setFocusable(false);
        btnRankPreco.setOpaque(false);
        btnRankPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankPrecoActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 150, 41));

        btnDelete.setFont(new java.awt.Font("Bookman Old Style", 1, 20)); // NOI18N
        btnDelete.setText("Deletar");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.setBorderPainted(false);
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setFocusPainted(false);
        btnDelete.setFocusable(false);
        btnDelete.setOpaque(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 128, 45));

        lblRank.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblRank.setForeground(new java.awt.Color(255, 255, 255));
        lblRank.setText("RANK's");
        getContentPane().add(lblRank, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cod.");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nota");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nome");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        btnRankAmbiente.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankAmbiente.setText("Ambiente");
        btnRankAmbiente.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankAmbiente.setBorderPainted(false);
        btnRankAmbiente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankAmbiente.setFocusPainted(false);
        btnRankAmbiente.setFocusable(false);
        btnRankAmbiente.setOpaque(false);
        btnRankAmbiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankAmbienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankAmbiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 160, 41));

        btnRankAtendimento.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankAtendimento.setText("Atendimento");
        btnRankAtendimento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankAtendimento.setBorderPainted(false);
        btnRankAtendimento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankAtendimento.setFocusPainted(false);
        btnRankAtendimento.setFocusable(false);
        btnRankAtendimento.setOpaque(false);
        btnRankAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankAtendimentoActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankAtendimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, 180, 41));

        btnRankHamburger.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankHamburger.setText("Hamburger");
        btnRankHamburger.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankHamburger.setBorderPainted(false);
        btnRankHamburger.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankHamburger.setFocusPainted(false);
        btnRankHamburger.setFocusable(false);
        btnRankHamburger.setOpaque(false);
        btnRankHamburger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankHamburgerActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankHamburger, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 170, 41));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Hamburguerias");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 270, -1));

        btnRankGeral.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        btnRankGeral.setText("Geral");
        btnRankGeral.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRankGeral.setBorderPainted(false);
        btnRankGeral.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRankGeral.setFocusPainted(false);
        btnRankGeral.setFocusable(false);
        btnRankGeral.setOpaque(false);
        btnRankGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankGeralActionPerformed(evt);
            }
        });
        getContentPane().add(btnRankGeral, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 140, 41));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ondecomi/view/Imagens/hamburguerias.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.setMaximumSize(new java.awt.Dimension(1006, 616));
        jLabel2.setMinimumSize(new java.awt.Dimension(1006, 616));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 490, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //Bot√µes Funcionais
    private void btnVoltarTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarTelaActionPerformed
        TelaInicial inicial = new TelaInicial();
        inicial.setVisible(true);
        inicial.recebeID(Integer.toString(idAvaliador), nome);
        dispose();
    }//GEN-LAST:event_btnVoltarTelaActionPerformed

    private void btnMaisBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaisBarActionPerformed
        NovaHam ham = new NovaHam();
        ham.setVisible(true);
        ham.recebeId(idAvaliador, nome);
        dispose();
    }//GEN-LAST:event_btnMaisBarActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String a[] = new String[2];
        a = jList1.getSelectedValue().split(" "); //Separar o ID da String
        try {
            if(jList1.isSelectedIndex(jList1.getSelectedIndex())){
                dao.deleteHamburger(Integer.parseInt(a[0]));
                model.removeElementAt(jList1.getSelectedIndex());
                JOptionPane.showMessageDialog(null, "Hamburgueria exclu√≠da");
                
            }else{
                JOptionPane.showMessageDialog(null, "Selecione uma Hamburgueria antes de deletar");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    //Rank's
    private void btnRankGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankGeralActionPerformed
        limpaRank();
        fillHamburgerGeral();
    }//GEN-LAST:event_btnRankGeralActionPerformed

    private void btnRankPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankPrecoActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, preco \n" +
                                        "from hamburgueria inner join avalia_hamburger\n" +
                                        "on id = id_hamburgueria\n" +
                                        "where id_avaliador = ? order by preco desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();
            
            while(rs.next()){
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String nota = Float.toString(rs.getFloat("preco"));
                //Adicionando na lista
                model.addElement(id+" | "+nota+ " | "+ nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                pstm.close();
                rs.close();
            }catch(Exception e1){
                JOptionPane.showMessageDialog(null, e1);
            } 
            
        }
    }//GEN-LAST:event_btnRankPrecoActionPerformed

    private void btnRankAmbienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankAmbienteActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, ambiente \n" +
                                        "from hamburgueria inner join avalia_hamburger\n" +
                                        "on id = id_hamburgueria\n" +
                                        "where id_avaliador = ? order by ambiente desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();
            
            while(rs.next()){
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String nota = Float.toString(rs.getFloat("ambiente"));
                //Adicionando na lista
                model.addElement(id+" | "+nota+ " | "+ nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                pstm.close();
                rs.close();
            }catch(Exception e1){
                JOptionPane.showMessageDialog(null, e1);
            } 
            
        }
    }//GEN-LAST:event_btnRankAmbienteActionPerformed

    private void btnRankAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankAtendimentoActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, atendimento \n" +
                                        "from hamburgueria inner join avalia_hamburger\n" +
                                        "on id = id_hamburgueria\n" +
                                        "where id_avaliador = ? order by atendimento desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();
            
            while(rs.next()){
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String nota = Float.toString(rs.getFloat("atendimento"));
                //Adicionando na lista
                model.addElement(id+" | "+nota+ " | "+ nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                pstm.close();
                rs.close();
            }catch(Exception e1){
                JOptionPane.showMessageDialog(null, e1);
            } 
            
        }
    }//GEN-LAST:event_btnRankAtendimentoActionPerformed

    private void btnRankHamburgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankHamburgerActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, hamburger \n" +
                                        "from hamburgueria inner join avalia_hamburger\n" +
                                        "on id = id_hamburgueria\n" +
                                        "where id_avaliador = ? order by hamburger desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();
            
            while(rs.next()){
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String nota = Float.toString(rs.getFloat("hamburger"));
                //Adicionando na lista
                model.addElement(id+" | "+nota+ " | "+ nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                pstm.close();
                rs.close();
            }catch(Exception e1){
                JOptionPane.showMessageDialog(null, e1);
            } 
            
        }
    }//GEN-LAST:event_btnRankHamburgerActionPerformed

    private void btnRankAcompanhamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankAcompanhamentoActionPerformed
        limpaRank();
        try {
            pstm = con.prepareStatement("select id, nome, acompanhamento \n" +
                                        "from hamburgueria inner join avalia_hamburger\n" +
                                        "on id = id_hamburgueria\n" +
                                        "where id_avaliador = ? order by acompanhamento desc");
            pstm.setInt(1, idAvaliador);
            rs = pstm.executeQuery();
            
            while(rs.next()){
                String id = Integer.toString(rs.getInt("id"));
                String nome = rs.getString("nome");
                String nota = Float.toString(rs.getFloat("acompanhamento"));
                //Adicionando na lista
                model.addElement(id+" | "+nota+ " | "+ nome);
            }
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                pstm.close();
                rs.close();
            }catch(Exception e1){
                JOptionPane.showMessageDialog(null, e1);
            } 
            
        }
    }//GEN-LAST:event_btnRankAcompanhamentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JHamburguerias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JHamburguerias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JHamburguerias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JHamburguerias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JHamburguerias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnMaisBar;
    private javax.swing.JButton btnRankAcompanhamento;
    private javax.swing.JButton btnRankAmbiente;
    private javax.swing.JButton btnRankAtendimento;
    private javax.swing.JButton btnRankGeral;
    private javax.swing.JButton btnRankHamburger;
    private javax.swing.JButton btnRankPreco;
    private javax.swing.JButton btnVoltarTela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRank;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("food.png")));
    }
}
